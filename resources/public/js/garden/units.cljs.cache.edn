;; Analyzed by ClojureScript 0.0-3211
{:use-macros {defunit garden.units}, :excludes #{rem}, :name garden.units, :imports nil, :requires {util garden.util, garden.util garden.util, cljs.reader cljs.reader, garden.types garden.types, t garden.types}, :uses {read-string cljs.reader}, :defs {percent {:meta {:end-column 17, :end-line 233, :column 10, :line 233, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 233, :column 1, :end-line 233, :end-column 17, :test true, :name garden.units/percent}, make-unit-divider {:protocol-inline nil, :meta {:arglists (quote ([unit])), :doc "Create a division function for dividing Units.", :end-column 24, :end-line 182, :column 7, :line 182, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/make-unit-divider, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 24, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Create a division function for dividing Units.", :test true}, mm? {:column 1, :line 228, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/mm?}, rad-div {:column 1, :line 253, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rad-div}, ch+ {:column 1, :line 239, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ch+}, vmax? {:column 1, :line 247, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmax?}, percent* {:column 1, :line 233, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/percent*}, dpi-div {:column 1, :line 268, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpi-div}, s* {:column 1, :line 258, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/s*}, ms {:meta {:end-column 12, :end-line 259, :column 10, :line 259, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 259, :column 1, :end-line 259, :end-column 12, :test true, :name garden.units/ms}, ms* {:column 1, :line 259, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ms*}, convertable? {:protocol-inline nil, :meta {:arglists (quote ([unit])), :doc "True if unit is a key of convertable-units, false otherwise.", :private true, :end-column 20, :end-line 81, :column 8, :line 81, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :private true, :name garden.units/convertable?, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 20, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "True if unit is a key of convertable-units, false otherwise.", :test true}, dpcm+ {:column 1, :line 269, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpcm+}, dppx* {:column 1, :line 270, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dppx*}, ch* {:column 1, :line 239, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ch*}, mm+ {:column 1, :line 228, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/mm+}, rad {:meta {:end-column 13, :end-line 253, :column 10, :line 253, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 253, :column 1, :end-line 253, :end-column 13, :test true, :name garden.units/rad}, px- {:column 1, :line 230, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/px-}, cm-div {:column 1, :line 227, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/cm-div}, turn+ {:column 1, :line 254, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/turn+}, length? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 14, :end-line 33, :column 7, :line 33, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/length?, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, grad {:meta {:end-column 14, :end-line 252, :column 10, :line 252, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 252, :column 1, :end-line 252, :end-column 14, :test true, :name garden.units/grad}, dppx- {:column 1, :line 270, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dppx-}, percent+ {:column 1, :line 233, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/percent+}, em* {:column 1, :line 237, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/em*}, ms- {:column 1, :line 259, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ms-}, dpi+ {:column 1, :line 268, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpi+}, vh+ {:column 1, :line 245, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vh+}, rad* {:column 1, :line 253, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rad*}, kHz-div {:column 1, :line 264, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/kHz-div}, vmax+ {:column 1, :line 247, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmax+}, vw-div {:column 1, :line 244, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vw-div}, mm- {:column 1, :line 228, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/mm-}, in {:meta {:end-column 12, :end-line 229, :column 10, :line 229, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 229, :column 1, :end-line 229, :end-column 12, :test true, :name garden.units/in}, pt* {:column 1, :line 231, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pt*}, make-unit-subtractor {:protocol-inline nil, :meta {:arglists (quote ([unit])), :doc "Create a subtraction function for subtracting Units.", :end-column 27, :end-line 155, :column 7, :line 155, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/make-unit-subtractor, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 27, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Create a subtraction function for subtracting Units.", :test true}, mm-div {:column 1, :line 228, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/mm-div}, vmin {:meta {:end-column 14, :end-line 246, :column 10, :line 246, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 246, :column 1, :end-line 246, :end-column 14, :test true, :name garden.units/vmin}, mm {:meta {:end-column 12, :end-line 228, :column 10, :line 228, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 228, :column 1, :end-line 228, :end-column 12, :test true, :name garden.units/mm}, em? {:column 1, :line 237, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/em?}, cm? {:column 1, :line 227, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/cm?}, time? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 12, :end-line 43, :column 7, :line 43, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/time?, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, dpi? {:column 1, :line 268, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpi?}, make-unit-multiplier {:protocol-inline nil, :meta {:arglists (quote ([unit])), :doc "Create a multiplication function for multiplying Units.", :end-column 27, :end-line 168, :column 7, :line 168, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/make-unit-multiplier, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 27, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Create a multiplication function for multiplying Units.", :test true}, vmin- {:column 1, :line 246, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmin-}, unit? {:protocol-inline nil, :meta {:arglists (quote ([x])), :doc "True if x is of type CSSUnit.", :end-column 12, :end-line 28, :column 7, :line 28, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/unit?, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "True if x is of type CSSUnit.", :test true}, deg-div {:column 1, :line 251, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/deg-div}, vw- {:column 1, :line 244, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vw-}, ch- {:column 1, :line 239, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ch-}, kHz {:meta {:end-column 13, :end-line 264, :column 10, :line 264, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 264, :column 1, :end-line 264, :end-column 13, :test true, :name garden.units/kHz}, convert {:protocol-inline nil, :meta {:arglists (quote ([{m :magnitude, left :unit} right])), :doc "Convert a Unit with :unit left to a Unit with :unit right if possible.", :private true, :end-column 15, :end-line 86, :column 8, :line 86, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :private true, :name garden.units/convert, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 15, :method-params ([p__13384 right]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{m :magnitude, left :unit} right])), :doc "Convert a Unit with :unit left to a Unit with :unit right if possible.", :test true}, resolution? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 18, :end-line 53, :column 7, :line 53, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/resolution?, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, ch-div {:column 1, :line 239, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ch-div}, cm- {:column 1, :line 227, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/cm-}, pt {:meta {:end-column 12, :end-line 231, :column 10, :line 231, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 231, :column 1, :end-line 231, :end-column 12, :test true, :name garden.units/pt}, frequency-units {:meta {:end-column 21, :end-line 22, :column 6, :line 22, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 22, :column 1, :end-line 22, :end-column 21, :test true, :name garden.units/frequency-units}, grad? {:column 1, :line 252, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/grad?}, vh? {:column 1, :line 245, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vh?}, make-unit-adder {:protocol-inline nil, :meta {:arglists (quote ([unit])), :doc "Create a addition function for adding Units.", :end-column 22, :end-line 141, :column 7, :line 141, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/make-unit-adder, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 22, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Create a addition function for adding Units.", :test true}, vmin* {:column 1, :line 246, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmin*}, dpcm* {:column 1, :line 269, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpcm*}, read-unit {:protocol-inline nil, :meta {:arglists (quote ([s])), :doc "Read a `CSSUnit` object from the string `s`.", :end-column 16, :end-line 111, :column 7, :line 111, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/read-unit, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Read a `CSSUnit` object from the string `s`.", :test true}, pc- {:column 1, :line 232, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pc-}, rad- {:column 1, :line 253, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rad-}, px* {:column 1, :line 230, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/px*}, rem+ {:column 1, :line 240, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rem+}, Hz- {:column 1, :line 263, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/Hz-}, length-units {:meta {:end-column 18, :end-line 16, :column 6, :line 16, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 16, :column 1, :end-line 16, :end-column 18, :test true, :name garden.units/length-units}, Hz+ {:column 1, :line 263, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/Hz+}, pc? {:column 1, :line 232, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pc?}, pt-div {:column 1, :line 231, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pt-div}, grad* {:column 1, :line 252, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/grad*}, s+ {:column 1, :line 258, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/s+}, vh* {:column 1, :line 245, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vh*}, s? {:column 1, :line 258, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/s?}, turn-div {:column 1, :line 254, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/turn-div}, vh- {:column 1, :line 245, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vh-}, ex+ {:column 1, :line 238, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ex+}, em+ {:column 1, :line 237, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/em+}, vmax- {:column 1, :line 247, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmax-}, frequency? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 17, :end-line 48, :column 7, :line 48, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/frequency?, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, vmin+ {:column 1, :line 246, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmin+}, deg+ {:column 1, :line 251, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/deg+}, grad+ {:column 1, :line 252, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/grad+}, dpi* {:column 1, :line 268, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpi*}, pt- {:column 1, :line 231, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pt-}, deg* {:column 1, :line 251, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/deg*}, vmax* {:column 1, :line 247, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmax*}, grad- {:column 1, :line 252, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/grad-}, vmin? {:column 1, :line 246, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmin?}, Hz* {:column 1, :line 263, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/Hz*}, vw+ {:column 1, :line 244, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vw+}, vw? {:column 1, :line 244, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vw?}, pt+ {:column 1, :line 231, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pt+}, in? {:column 1, :line 229, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/in?}, dpcm-div {:column 1, :line 269, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpcm-div}, ex* {:column 1, :line 238, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ex*}, Hz? {:column 1, :line 263, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/Hz?}, px+ {:column 1, :line 230, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/px+}, s-div {:column 1, :line 258, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/s-div}, rem {:meta {:end-column 13, :end-line 240, :column 10, :line 240, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 240, :column 1, :end-line 240, :end-column 13, :test true, :name garden.units/rem}, em {:meta {:end-column 12, :end-line 237, :column 10, :line 237, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 237, :column 1, :end-line 237, :end-column 12, :test true, :name garden.units/em}, em-div {:column 1, :line 237, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/em-div}, make-unit-fn {:protocol-inline nil, :meta {:arglists (quote ([unit])), :doc "Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.", :end-column 19, :end-line 124, :column 7, :line 124, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/make-unit-fn, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 19, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.", :test true}, dppx {:meta {:end-column 14, :end-line 270, :column 10, :line 270, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 270, :column 1, :end-line 270, :end-column 14, :test true, :name garden.units/dppx}, px {:meta {:end-column 12, :end-line 230, :column 10, :line 230, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 230, :column 1, :end-line 230, :end-column 12, :test true, :name garden.units/px}, px? {:column 1, :line 230, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/px?}, vmax-div {:column 1, :line 247, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmax-div}, rem? {:column 1, :line 240, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rem?}, vmin-div {:column 1, :line 246, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vmin-div}, Hz {:meta {:end-column 12, :end-line 263, :column 10, :line 263, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 263, :column 1, :end-line 263, :end-column 12, :test true, :name garden.units/Hz}, in* {:column 1, :line 229, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/in*}, dpcm {:meta {:end-column 14, :end-line 269, :column 10, :line 269, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 269, :column 1, :end-line 269, :end-column 14, :test true, :name garden.units/dpcm}, dppx+ {:column 1, :line 270, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dppx+}, ms? {:column 1, :line 259, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ms?}, pc {:meta {:end-column 12, :end-line 232, :column 10, :line 232, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 232, :column 1, :end-line 232, :end-column 12, :test true, :name garden.units/pc}, pt? {:column 1, :line 231, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pt?}, dppx-div {:column 1, :line 270, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dppx-div}, kHz* {:column 1, :line 264, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/kHz*}, dpi- {:column 1, :line 268, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpi-}, px-div {:column 1, :line 230, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/px-div}, mm* {:column 1, :line 228, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/mm*}, in- {:column 1, :line 229, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/in-}, pc-div {:column 1, :line 232, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pc-div}, s {:meta {:end-column 11, :end-line 258, :column 10, :line 258, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 258, :column 1, :end-line 258, :end-column 11, :test true, :name garden.units/s}, vh {:meta {:end-column 12, :end-line 245, :column 10, :line 245, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 245, :column 1, :end-line 245, :end-column 12, :test true, :name garden.units/vh}, pc* {:column 1, :line 232, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pc*}, pc+ {:column 1, :line 232, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/pc+}, ms+ {:column 1, :line 259, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ms+}, kHz+ {:column 1, :line 264, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/kHz+}, vw {:meta {:end-column 12, :end-line 244, :column 10, :line 244, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 244, :column 1, :end-line 244, :end-column 12, :test true, :name garden.units/vw}, deg {:meta {:end-column 13, :end-line 251, :column 10, :line 251, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 251, :column 1, :end-line 251, :end-column 13, :test true, :name garden.units/deg}, vw* {:column 1, :line 244, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vw*}, kHz- {:column 1, :line 264, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/kHz-}, ch {:meta {:end-column 12, :end-line 239, :column 10, :line 239, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 239, :column 1, :end-line 239, :end-column 12, :test true, :name garden.units/ch}, angular-units {:meta {:end-column 19, :end-line 18, :column 6, :line 18, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 18, :column 1, :end-line 18, :end-column 19, :test true, :name garden.units/angular-units}, dpcm- {:column 1, :line 269, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpcm-}, turn {:meta {:end-column 14, :end-line 254, :column 10, :line 254, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 254, :column 1, :end-line 254, :end-column 14, :test true, :name garden.units/turn}, turn- {:column 1, :line 254, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/turn-}, Hz-div {:column 1, :line 263, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/Hz-div}, in+ {:column 1, :line 229, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/in+}, dpi {:meta {:end-column 13, :end-line 268, :column 10, :line 268, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 268, :column 1, :end-line 268, :end-column 13, :test true, :name garden.units/dpi}, cm {:meta {:end-column 12, :end-line 227, :column 10, :line 227, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 227, :column 1, :end-line 227, :end-column 12, :test true, :name garden.units/cm}, cm* {:column 1, :line 227, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/cm*}, angle? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 13, :end-line 38, :column 7, :line 38, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/angle?, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, ex? {:column 1, :line 238, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ex?}, grad-div {:column 1, :line 252, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/grad-div}, rem- {:column 1, :line 240, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rem-}, deg? {:column 1, :line 251, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/deg?}, ms-div {:column 1, :line 259, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ms-div}, s- {:column 1, :line 258, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/s-}, resolution-units {:meta {:end-column 22, :end-line 24, :column 6, :line 24, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 24, :column 1, :end-line 24, :end-column 22, :test true, :name garden.units/resolution-units}, cm+ {:column 1, :line 227, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/cm+}, ex {:meta {:end-column 12, :end-line 238, :column 10, :line 238, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 238, :column 1, :end-line 238, :end-column 12, :test true, :name garden.units/ex}, dpcm? {:column 1, :line 269, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dpcm?}, rem* {:column 1, :line 240, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rem*}, ch? {:column 1, :line 239, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ch?}, kHz? {:column 1, :line 264, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/kHz?}, rem-div {:column 1, :line 240, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rem-div}, conversions {:meta {:doc "Map associating CSS unit types to their conversion values.", :private true, :end-column 14, :end-line 62, :column 3, :line 62, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :private true, :name garden.units/conversions, :file "resources\\public\\js\\garden\\units.cljs", :end-column 14, :column 1, :line 60, :end-line 62, :doc "Map associating CSS unit types to their conversion values.", :test true}, dppx? {:column 1, :line 270, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/dppx?}, percent-div {:column 1, :line 233, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/percent-div}, deg- {:column 1, :line 251, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/deg-}, rad? {:column 1, :line 253, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rad?}, percent- {:column 1, :line 233, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/percent-}, turn* {:column 1, :line 254, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/turn*}, time-units {:meta {:end-column 16, :end-line 20, :column 6, :line 20, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 20, :column 1, :end-line 20, :end-column 16, :test true, :name garden.units/time-units}, make-unit-predicate {:protocol-inline nil, :meta {:arglists (quote ([unit])), :doc "Creates a function for verifying the given unit type.", :end-column 26, :end-line 119, :column 7, :line 119, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :name garden.units/make-unit-predicate, :variadic false, :file "resources\\public\\js\\garden\\units.cljs", :end-column 26, :method-params ([unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([unit])), :doc "Creates a function for verifying the given unit type.", :test true}, in-div {:column 1, :line 229, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/in-div}, ex-div {:column 1, :line 238, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ex-div}, turn? {:column 1, :line 254, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/turn?}, unit-re {:meta {:private true, :doc "Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.", :end-column 10, :end-line 108, :column 3, :line 108, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :private true, :name garden.units/unit-re, :file "resources\\public\\js\\garden\\units.cljs", :end-column 10, :column 1, :line 105, :end-line 108, :doc "Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.", :test true}, vh-div {:column 1, :line 245, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/vh-div}, percent? {:column 1, :line 233, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/percent?}, rad+ {:column 1, :line 253, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/rad+}, vmax {:meta {:end-column 14, :end-line 247, :column 10, :line 247, :file "C:\\Users\\Shannon\\Desktop\\Research\\Projects\\Pedistal\\resumeWeb\\resources\\public\\js\\garden\\units.cljs"}, :file "resources\\public\\js\\garden\\units.cljs", :line 247, :column 1, :end-line 247, :end-column 14, :test true, :name garden.units/vmax}, em- {:column 1, :line 237, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/em-}, ex- {:column 1, :line 238, :file "resources\\public\\js\\garden\\units.cljs", :meta {:file nil}, :test true, :name garden.units/ex-}}, :require-macros {garden.units garden.units}, :cljs.analyzer/constants {:order [:mm :pt :px :pc :cm :in :deg :turn :rad :grad :s :ms :kHz :Hz :dppx :dpcm :dpi :unit :rem :em :magnitude :else :% :ex :ch :vw :vh :vmin :vmax], :seen #{:mm :vmin :kHz :pt :else :unit :% :px :rem :em :dppx :dpcm :Hz :pc :magnitude :vh :s :ch :vw :deg :dpi :cm :turn :ex :vmax :ms :rad :grad :in}}, :doc "Functions and macros for working with CSS units."}